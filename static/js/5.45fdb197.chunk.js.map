{"version":3,"sources":["components/Notes/context/firebase/firebaseContext.js","components/Notes/context/firebase/firebaseReducer.js","components/Notes/context/types.js","components/Notes/context/firebase/FirebaseState.js","components/Notes/context/alert/alertReducer.js","components/Notes/context/alert/alertContext.js","components/Notes/context/alert/AlertState.js","components/Notes/components/Navbar.js","components/Notes/components/Alert.js","components/Notes/components/Form.js","components/Notes/components/Notes.js","components/Notes/components/Loader.js","components/Notes/pages/Home.js","components/Notes/pages/About.js","components/Notes/Notes.jsx"],"names":["FirebaseContext","createContext","handlers","state","loading","payload","notes","filter","note","id","firebaseReducer","action","type","DEFAULT","url","FirebaseState","children","useReducer","dispatch","showLoader","fetchNotes","a","axios","get","res","Object","keys","data","map","key","console","log","addNote","title","Date","toJSON","post","name","Error","message","removeNote","delete","Provider","value","visible","alertReducer","AlertContext","AlertState","show","text","hide","alert","Navbar","className","to","exact","Alert","useContext","CSSTransition","in","timeout","enter","exit","classNames","mountOnEnter","unmountOnExit","onClick","aria-label","aria-hidden","Form","useState","setValue","firebase","onSubmit","event","preventDefault","trim","then","catch","placeholder","onChange","e","target","Notes","onRemove","TransitionGroup","component","date","Loader","role","Home","useEffect","About","compose","withAuthRedirect","props","path"],"mappings":"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","file":"static/js/5.45fdb197.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nexport const FirebaseContext = createContext()","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\n\nconst handlers = {\n    [SHOW_LOADER]: state => ({...state, loading: true}),\n    [ADD_NOTE]: (state, {payload}) => ({\n        ...state,\n        notes: [...state.notes, payload]\n    }),\n    [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\n    [REMOVE_NOTE]: (state, {payload}) => ({\n        ...state,\n        notes: state.notes.filter(note => note.id !== payload)\n    }),\n    DEFAULT: state => state\n}\n\nexport const firebaseReducer = (state, action) => {\n    const handle = handlers[action.type] || handlers.DEFAULT\n    return handle(state, action)\n }","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\nexport const SHOW_LOADER = 'SHOW_LOADER'\nexport const ADD_NOTE = 'ADD_NOTE'\nexport const FETCH_NOTES = 'FETCH_NOTES'\nexport const REMOVE_NOTE = 'REMOVE_NOTE'","import React, {useReducer} from \"react\"\nimport {FirebaseContext} from \"./firebaseContext\";\nimport {firebaseReducer} from \"./firebaseReducer\";\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\nimport axios from \"axios\";\n\nconst url = 'https://note-react-app-59f4c.firebaseio.com'\n\nexport const FirebaseState = ({children}) => {\n    const initialState = {\n        notes: [],\n        loading: false\n    }\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\n\n    const showLoader = () => dispatch({type: SHOW_LOADER})\n\n    const fetchNotes = async () => {\n        showLoader()\n        const res = await axios.get(`${url}/notes.json`)\n\n        const payload = Object.keys(res.data).map(key => {\n            return {\n                ...res.data[key],\n                id: key\n            }\n        })\n\n        dispatch({\n            type: FETCH_NOTES, payload\n        })\n\n        console.log('fetchNotes', res.data)\n    }\n\n    const addNote = async title => {\n        const note = {\n            title, data: new Date().toJSON()\n        }\n        try {\n            const res = await axios.post(`${url}/notes.json`, note)\n            const payload = {\n                ...note,\n                id: res.data.name\n            }\n\n            dispatch({\n                type: ADD_NOTE, payload\n            })\n        } catch (e) {\n            throw new Error(e.message)\n        }\n    }\n\n    const removeNote = async id => {\n        await axios.delete(`${url}/notes/${id}.json`)\n\n        dispatch({\n            type: REMOVE_NOTE,\n            payload: id\n        })\n    }\n\n    return (\n        <FirebaseContext.Provider value={{\n            showLoader, addNote, removeNote, fetchNotes,\n            loading: state.loading,\n            notes: state.notes\n        }}>\n            {children}\n        </FirebaseContext.Provider>\n    )\n}","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nconst handlers = {\n    [SHOW_ALERT]: (state, {payload}) => ({...payload, visible: true}),\n    [HIDE_ALERT]: state => ({...state, visible: false}),\n    DEFAULT: state => state\n}\n\nexport const alertReducer = (state, action) => {\n    const handle = handlers[action.type] || handlers.DEFAULT\n    return handle(state, action)\n}","import {createContext} from 'react'\n\nexport const AlertContext = createContext()","import React, {useReducer} from \"react\"\nimport {alertReducer} from \"./alertReducer\";\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\nimport {AlertContext} from \"./alertContext\";\n\nexport const AlertState = ({children}) => {\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\n\n    const show = (text, type = 'warning') => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {text, type}\n        })\n    }\n\n    const hide = () => dispatch({type: HIDE_ALERT})\n\n    return(\n        <AlertContext.Provider value={{\n            show, hide,\n            alert: state\n        }}>\n            {children}\n        </AlertContext.Provider>\n    )\n}","import React from \"react\"\nimport {NavLink} from \"react-router-dom\";\n\nexport const Navbar = () => (\n    <nav className='navbar navbar-dark navbar-expand-lg bg-primary'>\n        <div className='navbar-brand'>\n            Note App\n        </div>\n\n        <ul className='navbar-nav'>\n            <li className='nav-item'>\n                <NavLink\n                    className='nav-link'\n                    to=\"/\"\n                    exact\n                >\n                    Home\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink\n                    className='nav-link'\n                    to=\"/about\">\n                    Info\n                </NavLink>\n            </li>\n        </ul>\n    </nav>\n)\n","import React, {useContext} from \"react\"\nimport {AlertContext} from \"../context/alert/alertContext\";\nimport {CSSTransition} from \"react-transition-group\";\n\nexport const Alert = () => {\n    const {alert, hide} = useContext(AlertContext)\n\n    return (\n        <CSSTransition\n            in={alert.visible}\n            timeout={{\n                enter: 500,\n                exit: 350\n            }}\n            classNames={'alert'}\n            mountOnEnter\n            unmountOnExit\n        >\n            <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\n                <strong>Attention!</strong>\n                &nbsp;{alert.text}\n                <button onClick={hide} type='button' className='close' aria-label='Close'>\n                    <span aria-hidden='true'>&times;</span>\n                </button>\n            </div>\n        </CSSTransition>\n    )\n}","import React, {useContext, useState} from \"react\"\nimport {AlertContext} from \"../context/alert/alertContext\";\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\n\nexport const Form = () => {\n    const [value, setValue] = useState('')\n    const alert = useContext(AlertContext)\n    const firebase = useContext(FirebaseContext)\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        if (value.trim()) {\n            firebase.addNote(value.trim()).then(() => {\n                alert.show('Notes has created', 'success')\n            }).catch(() => {\n                alert.show('Something gone wrong', 'danger')\n            })\n            setValue('')\n        } else {\n            alert.show('Enter a note name')\n        }\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder='Enter a note name'\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                />\n\n            </div>\n        </form>\n    )\n}","import React from \"react\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nexport const Notes = ({notes, onRemove}) => (\n    <TransitionGroup component='ul' className='list-group'>\n        {notes.map(note => (\n            <CSSTransition\n                key={note.id}\n                classNames={'note'}\n                timeout={800}\n            >\n                <li className='list-group-item note'>\n                    <div>\n                        <strong>{note.title}</strong>\n                        <small>{note.date}</small>\n                    </div>\n                    <button\n                        type='button'\n                        className='btn btn-outline-danger btn-sm'\n                        onClick={() => onRemove(note.id)}\n                    >\n                        &times;\n                    </button>\n                </li>\n            </CSSTransition>\n        ))}\n    </TransitionGroup>\n)","import React from \"react\"\n\nexport const Loader = () => (\n    <div className='text-center'>\n        <div className='spinner-border' role='status'>\n            <span className='sr-only'>Loading...</span>\n        </div>\n    </div>\n)","import React, {Fragment, useContext, useEffect} from 'react'\nimport {Form} from \"../components/Form\";\nimport {Notes} from \"../components/Notes\";\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\nimport {Loader} from \"../components/Loader\";\n\nexport const Home = () => {\n    const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext)\n\n    useEffect(() => {\n        fetchNotes()\n    }, [])\n    return (\n        <Fragment>\n            <Form/>\n\n            <hr/>\n\n            {loading\n                ? <Loader />\n                : <Notes notes={notes} onRemove={removeNote} />\n            }\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport const About = () => (\n    <div className='jumbotron'>\n        <div className='container'>\n            <h1 className='display-4'>The best REACT APP</h1>\n            <p className='lead'>\n                Version <strong>1.0.4 </strong>\n            </p>\n        </div>\n    </div>\n)","import React from \"react\";\r\nimport s from './Notes.module.scss';\r\nimport {FirebaseState} from \"./context/firebase/FirebaseState\";\r\nimport {AlertState} from \"./context/alert/AlertState\";\r\nimport {BrowserRouter, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Navbar} from \"./components/Navbar\";\r\nimport {Alert} from \"./components/Alert\";\r\nimport {Home} from \"./pages/Home\";\r\nimport {About} from \"./pages/About\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst Notes = (props) => {\r\n    return (\r\n            <FirebaseState>\r\n                <AlertState>\r\n                    <BrowserRouter>\r\n                        <Navbar/>\r\n                        <div className='container pt-4'>\r\n                            <Alert/>\r\n                            <Switch>\r\n                                <Route path={'/'} exact component={Home}/>\r\n                                <Route path={'/about'} exact component={About}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                </AlertState>\r\n            </FirebaseState>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect\r\n)(Notes)"],"sourceRoot":""}