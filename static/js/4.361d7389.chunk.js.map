{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","avatar","src","name","to","Message","item","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","btn","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","someText","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,SAAW,4B,+FCgB9VC,EAbI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKH,UAAWC,IAAEG,QACd,yBAAKC,IAAI,oDAEb,kBAAC,IAAD,CAASL,UAAWC,IAAEK,KAAMC,GAAIT,GAAOD,EAAMS,QCG1CE,EAZC,SAACX,GAEb,OACI,yBAAKG,UAAWC,IAAEQ,MACd,yBAAKT,UAAWC,IAAEG,QACd,yBAAKC,IAAI,oDAEb,yBAAKL,UAAWC,IAAES,SAAUb,EAAMa,W,kCCJxCC,EAAcC,YAAiB,IAatBC,cAAU,CAACC,KAAM,kBAAjBD,EAZQ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcL,KAAM,iBAAkBgB,YAAa,wBAExG,6BACI,4BAAQtB,UAAWC,IAAEsB,KAArB,aCqBDC,EA7BC,SAAC3B,GACb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMP,GAAI+B,EAAE/B,QAC1EgC,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,aAMpE,OAEI,yBAAKV,UAAWC,IAAE2B,SAEd,yBAAK5B,UAAWC,IAAEiC,cACXP,GAEP,yBAAK3B,UAAWC,IAAE+B,UACd,6BAAMD,GACN,6BACI,kBAAC,EAAD,CAAgBhB,SAdZ,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOE,qBAgBrB,0BAAMrC,UAAWC,IAAEqC,UAAnB,mCAA6D,6BAA7D,yC,wBCRGC,sBACXC,aAfkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAAUC,YAAmBL,SAOrCM,IAFWJ,CAGbf","file":"static/js/4.361d7389.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"item\":\"Dialogs_item__29pPd\",\"name\":\"Dialogs_name__2pejV\",\"avatar\":\"Dialogs_avatar__1hg1l\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"btn\":\"Dialogs_btn__kLfml\",\"someText\":\"Dialogs_someText__25Ki1\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <div className={s.avatar}>\r\n                <img src='https://www.w3schools.com/w3images/avatar2.png'/>\r\n            </div>\r\n            <NavLink className={s.name} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.avatar}>\r\n                <img src='https://www.w3schools.com/w3images/avatar2.png'/>\r\n            </div>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './../Dialogs.module.css';\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name={'newMessageBody'} placeholder={'Enter your message'} />\r\n            </div>\r\n            <div>\r\n                <button className={s.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm({form: 'dialogsMessage'})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} id={d.id} />);\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {  dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n            <span className={s.someText}>It is beta version dialogs page.<br/>\r\n                New functional in the next version.</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch( sendMessageCreator(newMessageBody) );\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}