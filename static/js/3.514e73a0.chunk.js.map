{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","moreInfo","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","btn","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","onClick","Contact","ProfileInfo","savePhoto","saveProfile","mainProfileInfo","avatar","src","photos","large","userPhoto","mainDescription","newPhoto","target","files","length","profileData","initialValues","formData","then","Post","item","text","message","likes","likesCount","maxLength10","maxLengthCreator","ProfileAddNewPostForm","Field","component","name","validate","required","placeholder","MyPosts","React","memo","postsElements","posts","reverse","p","id","postsBlock","values","dispatch","reset","addPost","newPostText","MyPostsContainer","connect","state","profilePage","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","profileUpdateStatus","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.514e73a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfileInfo\":\"ProfileInfo_mainProfileInfo__OPEME\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"mainDescription\":\"ProfileInfo_mainDescription__1zuzO\",\"status\":\"ProfileInfo_status__2G3BZ\",\"newPhoto\":\"ProfileInfo_newPhoto__30p-a\",\"moreInfo\":\"ProfileInfo_moreInfo__8rEdC\",\"btn\":\"ProfileInfo_btn__2WuXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\",\"btn\":\"MyPosts_btn__2fOso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"text\":\"Post_text__3_Vii\",\"likes\":\"Post_likes__2o7Hq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick={ activateEditMode }>{props.status || '---'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={ deactivateEditMode} autoFocus={true}\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit} className={s.moreInfo}>\r\n        { error && <div className={styles.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <b>FullName</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills: </b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me: </b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts </b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: </b> {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}\r\n        </div>\r\n        <div><button className={s.btn}>Save</button></div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assects/images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = formData => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.mainProfileInfo}>\r\n                <div className={s.avatar}>\r\n                    <img src={profile.photos.large || userPhoto} />\r\n                </div>\r\n\r\n                <div className={s.mainDescription}>\r\n                    <div className={s.status}>\r\n                        <ProfileStatusWithHooks  status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n\r\n                    <div className={s.newPhoto}>\r\n                        { isOwner &&\r\n                        <div>\r\n                            <span>Upload a new photo</span>\r\n                            <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n                        </div> }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.profileData}>\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner}\r\n                                   goToEditMode={() => {setEditMode(true)}} /> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.moreInfo}>\r\n        <div>\r\n            <b>FullName</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n        {isOwner && <div><button className={s.btn} onClick={goToEditMode} >Edit</button></div>}\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg' />\r\n            <div className={s.text}>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span className={s.likes}>like</span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from'./MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder={'Post message'} />\r\n            </div>\r\n            <div>\r\n                <button className={s.btn}>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst ProfileAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let onAddPost = (values, dispatch) => {\r\n        dispatch(reset('postMessage'))\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <ProfileAddNewPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    ) \r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mstp = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mdtp = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch( addPostActionCreator(newPostText) );\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mstp, mdtp)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     savePhoto={this.props.savePhoto}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    profileUpdateStatus: state.profilePage.profileUpdateStatus,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}