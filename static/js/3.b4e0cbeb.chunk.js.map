{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Post","item","message","likesCount","maxLength10","maxLengthCreator","ProfileAddNewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPosts","memo","console","log","postsElements","posts","reverse","map","p","postsBlock","values","dispatch","reset","addPost","newPostText","MyPostsContainer","connect","state","profilePage","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b4e0cbeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3kA1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2see_\",\"posts\":\"MyPosts_posts__35FJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__208gI\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n       return (\r\n           <div>\r\n               {!this.state.editMode &&\r\n                   <div>\r\n                       <span onDoubleClick={ this.activateEditMode }>{this.props.status || '---'}</span>\r\n                   </div>\r\n               }\r\n               {this.state.editMode &&\r\n                   <div>\r\n                       <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode} value={this.state.status}/>\r\n                   </div>\r\n               }\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || '---'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={ deactivateEditMode} autoFocus={true}\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks  status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg' />\r\n                {props.message}\r\n            <div>\r\n                <span>like</span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from'./MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder={'Post message'} />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst ProfileAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    console.log(\"Work\")\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map( p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let onAddPost = (values, dispatch) => {\r\n        dispatch(reset('postMessage'))\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <ProfileAddNewPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    ) \r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mstp = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mdtp = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch( addPostActionCreator(newPostText) );\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mstp, mdtp)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}